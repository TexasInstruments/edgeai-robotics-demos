<launch>

  
  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
  <node pkg="tf" type="static_transform_publisher" name="base_scan_to_lidar" args="0 0 0 0 0 0 lidar_1 base_scan 30" /> 
  <node pkg="tf" type="static_transform_publisher" name="base_foot_to_imu" args="0.1 0 0.1 0 0 0 base_footprint imu 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_foot_to_base_link" args="0 0 0 0 0 0 base_footprint base_link 30" />

  <!-- Default robot configuration -->
  <arg name = "robot_config" default = "/opt/robot/edgeai-robotics-demos/python/common/scuttlepy/config/scuttle_sk_config.yaml" />

  <!-- Map File -->
  <arg name="map_file" default="$(find lidar_navigation)/maps/ewing_0218.map.yaml"/>

  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Launch bno055 IMU -->
  <include file="$(find imu_bno055)/launch/imu.launch"/> 

  <!-- Extended Kalman Filter from robot_pose_ekf Node-->
  <!-- Subscribe: /odom, /imu_data, /vo -->
  <!-- Publish: /robot_pose_ekf/odom_combined -->
  <remap from="odom" to="odom" />
  <remap from="imu_data" to="imu/data" />
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="base_footprint_frame" value="base_footprint"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="gps_used" value="false"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
  </node>

  <!-- Add AMCL example for differential drive robots for Localization -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find lidar_navigation)/launch/amcl_diff.launch"/>

  <!-- move_base -->
  <include file="$(find lidar_navigation)/launch/move_base.launch"/> 
  
  <include file="$(find rplidar_ros)/launch/rplidar.launch" />
  <arg default="$(find lidar_navigation)/urdf/scuttle.xacro" name="model"/>
  <param command="$(find xacro)/xacro $(arg model)" name="robot_description"/>
  <param name="enable_tf_publish" value="false"/>
  <param name="enable_joint_state_publish" value="false"/>   
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
  <node pkg="scuttle_driver" type="scuttle_driver.py" name="scuttle_driver" output="screen">
        <!-- Default robot configuration -->
        <param name = "robot_config" value = "$(arg robot_config)" />
  </node> 

</launch>
